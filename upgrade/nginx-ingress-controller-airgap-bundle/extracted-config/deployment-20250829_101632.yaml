apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: dev-sds-ingress
    meta.helm.sh/release-namespace: devops-nginx-ingress
  creationTimestamp: "2025-08-07T01:14:50Z"
  generation: 1
  labels:
    app: ingress-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: dev-sds-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-controller
    helm.sh/chart: ingress-controller-1.12.4
    product: nginx-ingress-controller
    release: dev-sds-ingress
    release-id: RELEASE-0Ioa9U9wqwhL9I8QbF59dh
    sdspaas.io/created-by: "10610"
    sdspaas.io/id: IMAGE-NrOdC9WPs9bRIVWsjWffHl
    sdspaas.io/managed-by: SDS_PaaS
    sdspaas.io/name: Ingress_NGINX_Controller_Community_1.12.4
    sdspaas.io/price: Free
    sdspaas.io/resource-kind: deployment
    sdspaas.io/version: 1.12.4
  name: dev-sds-ingress-ingress-controller
  namespace: devops-nginx-ingress
  resourceVersion: "7324628"
  uid: 10043830-a235-44b2-8b54-bc22c09075be
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ingress-controller
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: dev-sds-ingress
      app.kubernetes.io/name: ingress-controller
      release: dev-sds-ingress
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ingress-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: dev-sds-ingress
        app.kubernetes.io/name: ingress-controller
        product: nginx-ingress-controller
        release: dev-sds-ingress
        release-id: RELEASE-0Ioa9U9wqwhL9I8QbF59dh
        sdspaas.io/created-by: "10610"
        sdspaas.io/id: IMAGE-NrOdC9WPs9bRIVWsjWffHl
        sdspaas.io/managed-by: SDS_PaaS
        sdspaas.io/name: Ingress_NGINX_Controller_Community_1.12.4
        sdspaas.io/price: Free
        sdspaas.io/version: 1.12.4
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-controller-leader-dev-sds-ingress-devops-nginx-ingress
        - --configmap=$(POD_NAMESPACE)/dev-sds-ingress-ingress-controller
        - --controller-class=k8s.io/dev-sds-ingress-ingress-controller
        - --ingress-class=nginx
        env:
        - name: TZ
          value: Asia/Seoul
        - name: LANG
          value: ko_KR.UTF-8
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: sscr.comm.scp-in.com/score-scpapps/nginx-ingress-controller:v1.12.4
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - mkdir -p /var/log/k8s-ingress/$(hostname) && ln -sf /var/log/k8s-ingress/$(hostname)/access.log
                /var/log/nginx/access.log && ln -sf /var/log/k8s-ingress/$(hostname)/error.log
                /var/log/nginx/error.log
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: ingress-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/k8s-ingress
          name: logs
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: dev-sds-ingress-ingress-controller
      serviceAccountName: dev-sds-ingress-ingress-controller
      terminationGracePeriodSeconds: 300
      volumes:
      - emptyDir: {}
        name: logs
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-08-07T01:14:50Z"
    lastUpdateTime: "2025-08-07T01:15:20Z"
    message: ReplicaSet "dev-sds-ingress-ingress-controller-7796566df8" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-08-15T21:47:09Z"
    lastUpdateTime: "2025-08-15T21:47:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
