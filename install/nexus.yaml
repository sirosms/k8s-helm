## Default values for nexus.

app: nexus

replicaCount: 1

strategy:
  type: Recreate

image:
  repository: sscr.comm.scp-in.com/devops-service/nexus
  tag: 3.37.3
  pullPolicy: IfNotPresent
imagePullSecrets:
# - name: devops-docker-credential

ports:
  - name: http
    containerPort: 8081
    protocol: TCP

service:
  enabled: true
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9184"
    prometheus.io/path: "/"
  type: ClusterIP
  ports: 
    - name: http
      port: 8081
      targetPort: http
      protocol: TCP
    - name: http-metrics
      port: 9184
      targetPort: http-metrics
      protocol: TCP
    - name: http-docker
      port: 8181
      targetPort: 8181
      protocol: TCP 

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: sds-ingress-devops-nginx-ingress # TODO 개발 nginx 로 확인 후 변경
    nginx.ingress.kubernetes.io/proxy-body-size: 0m
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  host: nexus.secl.samsung.co.kr
  path: /
  servicePort: 8081
  tls:
    enabled: true
    secretName: secl.samsung.co.kr-tls

networkPolicy:
  enabled: false

hostAliases:
# - ip: 70.100.100.100
#   hostnames:
#     - devops.cluster.io

readinessProbe:
  enabled: true
  type: httpGet
  httpGet:
    path: /
    port: 8081
  initialDelaySeconds: 30
  periodSeconds: 60
  failureThreshold: 3
  timeoutSeconds: 1
  successThreshold: 1

livenessProbe:
  enabled: true
  type: httpGet
  httpGet:
    path: /
    port: 8081
  initialDelaySeconds: 30
  periodSeconds: 60
  failureThreshold: 3
  timeoutSeconds: 1
  successThreshold: 1

resources:
  requests:
    cpu: 1
    memory: 4Gi
  limits:
    cpu: 2
    memory: 8Gi

nodeSelector:
# kubernetes.io/nodetype: app

persistence:
  - name: data
    mountPath: /nexus-data
    existingClaim: nexus-data
  - name: db
    mountPath: /nexus-data/db
    existingClaim: nexus-db

initContainers:
  - name: init
    image: sscr.comm.scp-in.com/devops-service/busybox:latest
    volumeMounts:
      - mountPath: /nexus-data
        name: data
      - mountPath: /nexus-data/nexus.properties
        name: config
        subPath: nexus.properties      
    command: ['/bin/sh', '-c', 'mkdir -p /nexus-data/etc && chown 200:200 /nexus-data/etc && cp /nexus-data/nexus.properties /nexus-data/etc/nexus.properties' ]

addContainers:
  - name: metrics
    image: sscr.comm.scp-in.com/devops-service/nexus-exporter:0.2.2
    imagePullPolicy: IfNotPresent
    env:
      - name: NEXUS_HOST
        value: http://localhost:8081/nexus
      - name: NEXUS_USERNAME
        value: admin
      - name: NEXUS_ADMIN_PASSWORD
        value: admin123
    ports:
      - containerPort: 9184
        name: http-metrics

configMap:
  nexus.properties: |-
    # https://community.sonatype.com/t/is-that-possible-to-install-a-nexus-chart-with-a-given-initial-password/2962
    nexus.security.randompassword=false
    # https://support.sonatype.com/hc/en-us/articles/360045220393
    nexus.scripts.allowCreation=true
    nexus-context-path=/
